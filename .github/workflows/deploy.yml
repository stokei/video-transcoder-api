name: Video Transcoder API CI/CD

on:
  push:
    branches:
      - main

jobs:
  display-variables:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use variables
        run: |
          echo "Var: ${{ env.DROPLET_IP }}";
          echo "Var: ${{ secrets.DROPLET_IP }}";
          echo "Var: ${{ vars.DROPLET_IP }}";
#  ci:
#    runs-on: ubuntu-latest
#    environment: Production
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '20'
#
#      - name: Cache node_modules
#        uses: actions/cache@v3
#        with:
#          path: node_modules
#          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-
#
#      - name: Install dependencies
#        run: yarn install --frozen-lockfile
#
#      - name: Lint
#        run: yarn lint
#
#  cd:
#    runs-on: ubuntu-latest
#    needs: ci
#    environment: Production
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Install GitVersion
#        uses: gittools/actions/gitversion/setup@v3.0.0
#        with:
#          versionSpec: '6.x'
#          
#      - name: GitVersion
#        id: gitversion
#        uses: gittools/actions/gitversion/execute@v0.9.11
#        with:
#          useConfigFile: true
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ vars.DOCKER_HUB_USERNAME }}
#          password: ${{ vars.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Build and push Docker image
#        env:
#          VERSION: ${{ steps.gitversion.outputs.fullSemVer }}
#        run: |
#          docker buildx build --platform linux/amd64 --push -t ${{ vars.DOCKER_HUB_USERNAME }}/video-transcoder-api:${{ env.VERSION }} .
#
#      - name: SSH into Droplet and deploy
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ vars.DROPLET_IP }}
#          username: root
#          key: ${{ vars.DROPLET_SSH_PRIVATE_KEY }}
#          script: |
#            cd /root
#            export VERSION=${{ env.VERSION }}
#            docker-compose pull
#            docker-compose up -d --no-deps --build video-transcode-api
#            docker system prune -f
#
